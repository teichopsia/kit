#!/usr/bin/env python3

import curses
import requests
import os
import sys
import functools
import socket
import urllib3.util.retry

class exchain(object):
    def __init__(self,ex):
        self.ex=ex if isinstance(ex,Exception) else sys.exc_info()[1]

    def __iter__(self):
        p=self.ex.__context__
        while p:
            yield '{}.{}'.format(p.__module__,p.__class__.__name__)
            p=p.__context__

def invoke(display,roku,action):
    inv=requests.Session()
    oneshot=urllib3.util.retry.Retry(total=0)
    #roku ecp is stupid. if the host is NOT the ip assigned it throws
    #permission denied as if using local dns is a misconfiguration
    #or a stupid assumption on what 'local' means wrt security
    try:
        res=socket.getaddrinfo(roku,8060,socket.AF_INET,socket.SOCK_STREAM)[0][-1]
    except socket.gaierror as e:
        return (False,'gaierror: {}'.format(e.args))
    url='http://{}:8060/keypress/{}'.format(res[0],action)
    inv.mount('http://',requests.adapters.HTTPAdapter(max_retries=oneshot))
    try:
        r=inv.post(url,data={})
    except requests.exceptions.ConnectionError as e:
        if 'socket.gaierror' not in exchain(e): #should always raise since we fix gaierror above
            raise
        return (False,'error: {}'.format(e.args))
    except requests.exceptions.ReadTimeout as e:
        return (False,'expired')
    else:
        if r.status_code in (200,):
            return (True,'')
        elif r.status_code in (202,):
            return (True,'unsupported')
        else:
            return (False,'other: {}'.format(r.status_code))

def menu(display,target):
    display.addstr(8,20, '(`) home             (u) +                   <up>      ')
    display.addstr(9,20, '(z) select  (h) rew  (j) -     (k) >>   <left>  <right>')
    display.addstr(10,20,'<tab> back           (m) mute               <down>     ')
    display.addstr(11,20,'<esc> exit          <space> play/pause   <enter> enter ')
    display.addstr(12,20,'   target: {}               (p) power'.format(target))

def main(target,display):
    remap={
        ord(' '):'play',
        ord('u'):'volumeup',
        ord('j'):'volumedown',
        ord('m'):'volumemute',
        ord('h'):'rev',
        ord('k'):'fwd',
        ord('p'):'power',
        ord('z'):'select',
        ord('	'):'back',
        ord('`'):'home',
        10:'enter',
        127:'backspace',
        curses.KEY_LEFT:'left',
        curses.KEY_RIGHT:'right',
        curses.KEY_UP:'up',
        curses.KEY_DOWN:'down',
        }
    display.keypad(True)
    curses.curs_set(False)
    display.clear()
    menu(display,target)
    try:
        x=y=0
        while True:
            try:
                k=display.getch()
            except KeyboardInterrupt:
                pass
            else:
                if k==27:
                    break
                elif k in remap.keys():
                    display.addstr(y,x,'{:<5s} {:<4s}'.format(remap[k],''))
                    t,e=invoke(display,target,remap[k])
                    display.addstr(y,x,'{:<5s} {:<4s} {}'.format(remap[k],'ack' if t else 'nak',e))
                    y+=1
                    y%=5
    except KeyboardInterrupt:
        pass
    except ():
        pass
    finally:
        curses.curs_set(True)
        display.keypad(False)
        display.clear()

if __name__=='__main__':
    os.environ.setdefault('ESCDELAY','10')
    if len(sys.argv)==2:
        curses.wrapper(functools.partial(main,sys.argv[1]))
    else:
        print('usage:\n\t{} <rokuip>'.format(sys.argv[0]))
